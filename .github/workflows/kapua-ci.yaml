name: Kapua CI
on: [ push, pull_request ] # Triggers the workflow on push or pull request events

env:
  BUILD_OPTS: ""
  CONFIG_OVERRIDES: "-Dcommons.db.schema=kapuadb -Dcommons.settings.hotswap=true -Dbroker.host=localhost -Dcrypto.secret.key=kapuaTestsKey!!!"
  MAVEN_OPTS: "-Xmx4096m"
  TEST_PROJECTS: "org.eclipse.kapua:kapua-security-test,org.eclipse.kapua:kapua-qa-integration,org.eclipse.kapua:kapua-scheduler-test,org.eclipse.kapua:kapua-user-test,org.eclipse.kapua:kapua-system-test,org.eclipse.kapua:kapua-job-test,org.eclipse.kapua:kapua-device-registry-test,org.eclipse.kapua:kapua-account-test,org.eclipse.kapua:kapua-tag-test,org.eclipse.kapua:kapua-translator-test"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 # Checks out a copy of the repository on the ubuntu-latest machine
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
          cache: 'maven'
      - uses: actions/cache@v3 # Cache local Maven repository to reuse dependencies
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - run: mvn -v
      - run: docker images -a  # used as log (should show only GitHub environment standard docker images; if kapua images are present, something is wrong)
      - uses: jpribyl/action-docker-layer-caching@v0.1.1  # docker images cache
        continue-on-error: true
        with:
          key: ${{ github.run_id }}-${{ github.run_number }}-docker-cache-{hash}  # cache is valid only for current run on the current repository
          restore-keys: |
            ${{ github.run_id }}-${{ github.run_number }}-docker-cache-
      #- run: mvn -B ${BUILD_OPTS} -Pdocker -DskipTests clean install
      - run: mvn -B ${BUILD_OPTS} -DskipTests clean install
      - run: bash <(curl -s https://codecov.io/bash)
  test-brokerAcl:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
          cache: 'maven'
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Docker images caching
        id: dock
        run: exit 1
#        uses: jpribyl/action-docker-layer-caching@v0.1.1  # docker images cache
#        continue-on-error: true
#        with:
#          key: ${{ github.run_id }}-${{ github.run_number }}-docker-cache-{hash}  # cache is valid only for current run on the current repository
#          restore-keys: |
#            ${{ github.run_id }}-${{ github.run_number }}-docker-cache-
#          skip-save: true
      - name: Build docker images if needed
        if: ${{ failure() && steps.dock.outcome == 'failure' }} #the first condition is needed for the way gitactions are structured, read https://docs.github.com/en/actions/learn-github-actions/expressions#status-check-functions
        run: mvn -f assembly/pom.xml -Pdocker -DskipTests clean install
      - run: echo "127.0.0.1       message-broker" | sudo tee -a /etc/hosts
      - run: echo "127.0.0.1       job-engine" | sudo tee -a /etc/hosts
      - run: docker images -a # used as log (to verify that kapua images are actually retrieved from cache and listed here)
      - uses: nick-fields/retry@v2.8.1
        with:
          timeout_minutes: 45
          retry_on: error
          max_attempts: 1
          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@brokerAcl" -pl ${TEST_PROJECTS} verify
      - run: bash <(curl -s https://codecov.io/bash)
#  test-tag:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@tag" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-broker:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - run: echo "127.0.0.1       message-broker" | sudo tee -a /etc/hosts
#      - run: echo "127.0.0.1       job-engine" | sudo tee -a /etc/hosts
#      - name: Docker images caching
#        id: dock
#        uses: jpribyl/action-docker-layer-caching@v0.1.1  # docker images cache
#        continue-on-error: true
#        with:
#          key: ${{ github.run_id }}-${{ github.run_number }}-docker-cache-{hash}  # cache is valid only for current run on the current repository
#          restore-keys: |
#            ${{ github.run_id }}-${{ github.run_number }}-docker-cache-
#          skip-save: true
#      - name: Build docker images if needed
#        if: ${{ failure() && steps.dock.outcome == 'failure' }}
#        run: mvn -f assembly/pom.xml -Pdocker -DskipTests clean install
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@broker" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-device:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - run: echo "127.0.0.1       message-broker" | sudo tee -a /etc/hosts
#      - run: echo "127.0.0.1       job-engine" | sudo tee -a /etc/hosts
#      - name: Docker images caching
#        id: dock
#        uses: jpribyl/action-docker-layer-caching@v0.1.1  # docker images cache
#        continue-on-error: true
#        with:
#          key: ${{ github.run_id }}-${{ github.run_number }}-docker-cache-{hash}  # cache is valid only for current run on the current repository
#          restore-keys: |
#            ${{ github.run_id }}-${{ github.run_number }}-docker-cache-
#          skip-save: true
#      - name: Build docker images if needed
#        if: ${{ failure() && steps.dock.outcome == 'failure' }}
#        run: mvn -f assembly/pom.xml -Pdocker -DskipTests clean install
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@device" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-device-management:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - run: echo "127.0.0.1       message-broker" | sudo tee -a /etc/hosts
#      - run: echo "127.0.0.1       job-engine" | sudo tee -a /etc/hosts
#      - name: Docker images caching
#        id: dock
#        uses: jpribyl/action-docker-layer-caching@v0.1.1  # docker images cache
#        continue-on-error: true
#        with:
#          key: ${{ github.run_id }}-${{ github.run_number }}-docker-cache-{hash}  # cache is valid only for current run on the current repository
#          restore-keys: |
#            ${{ github.run_id }}-${{ github.run_number }}-docker-cache-
#          skip-save: true
#      - name: Build docker images if needed
#        if: ${{ failure() && steps.dock.outcome == 'failure' }}
#        run: mvn -f assembly/pom.xml -Pdocker -DskipTests clean install
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@deviceManagement" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-connection:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - run: echo "127.0.0.1       message-broker" | sudo tee -a /etc/hosts
#      - run: echo "127.0.0.1       job-engine" | sudo tee -a /etc/hosts
#      - name: Docker images caching
#        id: dock
#        uses: jpribyl/action-docker-layer-caching@v0.1.1  # docker images cache
#        continue-on-error: true
#        with:
#          key: ${{ github.run_id }}-${{ github.run_number }}-docker-cache-{hash}  # cache is valid only for current run on the current repository
#          restore-keys: |
#            ${{ github.run_id }}-${{ github.run_number }}-docker-cache-
#          skip-save: true
#      - name: Build docker images if needed
#        if: ${{ failure() && steps.dock.outcome == 'failure' }}
#        run: mvn -f assembly/pom.xml -Pdocker -DskipTests clean install
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@connection" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-datastore:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - run: echo "127.0.0.1       message-broker" | sudo tee -a /etc/hosts
#      - run: echo "127.0.0.1       job-engine" | sudo tee -a /etc/hosts
#      - name: Docker images caching
#        id: dock
#        uses: jpribyl/action-docker-layer-caching@v0.1.1  # docker images cache
#        continue-on-error: true
#        with:
#          key: ${{ github.run_id }}-${{ github.run_number }}-docker-cache-{hash}  # cache is valid only for current run on the current repository
#          restore-keys: |
#            ${{ github.run_id }}-${{ github.run_number }}-docker-cache-
#          skip-save: true
#      - name: Build docker images if needed
#        if: ${{ failure() && steps.dock.outcome == 'failure' }}
#        run: mvn -f assembly/pom.xml -Pdocker -DskipTests clean install
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@datastore" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-user:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@user" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-userIntegrationBase:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - run: echo "127.0.0.1       message-broker" | sudo tee -a /etc/hosts
#      - run: echo "127.0.0.1       job-engine" | sudo tee -a /etc/hosts
#      - name: Docker images caching
#        id: dock
#        uses: jpribyl/action-docker-layer-caching@v0.1.1  # docker images cache
#        continue-on-error: true
#        with:
#          key: ${{ github.run_id }}-${{ github.run_number }}-docker-cache-{hash}  # cache is valid only for current run on the current repository
#          restore-keys: |
#            ${{ github.run_id }}-${{ github.run_number }}-docker-cache-
#          skip-save: true
#      - name: Build docker images if needed
#        if: ${{ failure() && steps.dock.outcome == 'failure' }}
#        run: mvn -f assembly/pom.xml -Pdocker -DskipTests clean install
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@userIntegrationBase" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-userIntegration:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - run: echo "127.0.0.1       message-broker" | sudo tee -a /etc/hosts
#      - run: echo "127.0.0.1       job-engine" | sudo tee -a /etc/hosts
#      - name: Docker images caching
#        id: dock
#        uses: jpribyl/action-docker-layer-caching@v0.1.1  # docker images cache
#        continue-on-error: true
#        with:
#          key: ${{ github.run_id }}-${{ github.run_number }}-docker-cache-{hash}  # cache is valid only for current run on the current repository
#          restore-keys: |
#            ${{ github.run_id }}-${{ github.run_number }}-docker-cache-
#          skip-save: true
#      - name: Build docker images if needed
#        if: ${{ failure() && steps.dock.outcome == 'failure' }}
#        run: mvn -f assembly/pom.xml -Pdocker -DskipTests clean install
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@userIntegration" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-security:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@security" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-jobsAndScheduler:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@jobs or @scheduler" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-jobsIntegrationBase:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - run: echo "127.0.0.1       message-broker" | sudo tee -a /etc/hosts
#      - run: echo "127.0.0.1       job-engine" | sudo tee -a /etc/hosts
#      - name: Docker images caching
#        id: dock
#        uses: jpribyl/action-docker-layer-caching@v0.1.1  # docker images cache
#        continue-on-error: true
#        with:
#          key: ${{ github.run_id }}-${{ github.run_number }}-docker-cache-{hash}  # cache is valid only for current run on the current repository
#          restore-keys: |
#            ${{ github.run_id }}-${{ github.run_number }}-docker-cache-
#          skip-save: true
#      - name: Build docker images if needed
#        if: ${{ failure() && steps.dock.outcome == 'failure' }}
#        run: mvn -f assembly/pom.xml -Pdocker -DskipTests clean install
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@jobsIntegrationBase" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-jobsIntegration:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - run: echo "127.0.0.1       message-broker" | sudo tee -a /etc/hosts
#      - run: echo "127.0.0.1       job-engine" | sudo tee -a /etc/hosts
#      - name: Docker images caching
#        id: dock
#        uses: jpribyl/action-docker-layer-caching@v0.1.1  # docker images cache
#        continue-on-error: true
#        with:
#          key: ${{ github.run_id }}-${{ github.run_number }}-docker-cache-{hash}  # cache is valid only for current run on the current repository
#          restore-keys: |
#            ${{ github.run_id }}-${{ github.run_number }}-docker-cache-
#          skip-save: true
#      - name: Build docker images if needed
#        if: ${{ failure() && steps.dock.outcome == 'failure' }}
#        run: mvn -f assembly/pom.xml -Pdocker -DskipTests clean install
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@jobsIntegration" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-triggerService:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - run: echo "127.0.0.1       message-broker" | sudo tee -a /etc/hosts
#      - run: echo "127.0.0.1       job-engine" | sudo tee -a /etc/hosts
#      - name: Docker images caching
#        id: dock
#        uses: jpribyl/action-docker-layer-caching@v0.1.1  # docker images cache
#        continue-on-error: true
#        with:
#          key: ${{ github.run_id }}-${{ github.run_number }}-docker-cache-{hash}  # cache is valid only for current run on the current repository
#          restore-keys: |
#            ${{ github.run_id }}-${{ github.run_number }}-docker-cache-
#          skip-save: true
#      - name: Build docker images if needed
#        if: ${{ failure() && steps.dock.outcome == 'failure' }}
#        run: mvn -f assembly/pom.xml -Pdocker -DskipTests clean install
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@triggerService" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-triggerServiceIntegrationBase:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - run: echo "127.0.0.1       message-broker" | sudo tee -a /etc/hosts
#      - run: echo "127.0.0.1       job-engine" | sudo tee -a /etc/hosts
#      - name: Docker images caching
#        id: dock
#        uses: jpribyl/action-docker-layer-caching@v0.1.1  # docker images cache
#        continue-on-error: true
#        with:
#          key: ${{ github.run_id }}-${{ github.run_number }}-docker-cache-{hash}  # cache is valid only for current run on the current repository
#          restore-keys: |
#            ${{ github.run_id }}-${{ github.run_number }}-docker-cache-
#          skip-save: true
#      - name: Build docker images if needed
#        if: ${{ failure() && steps.dock.outcome == 'failure' }}
#        run: mvn -f assembly/pom.xml -Pdocker -DskipTests clean install
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@triggerServiceIntegrationBase" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-triggerServiceIntegration:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - run: echo "127.0.0.1       message-broker" | sudo tee -a /etc/hosts
#      - run: echo "127.0.0.1       job-engine" | sudo tee -a /etc/hosts
#      - name: Docker images caching
#        id: dock
#        uses: jpribyl/action-docker-layer-caching@v0.1.1  # docker images cache
#        continue-on-error: true
#        with:
#          key: ${{ github.run_id }}-${{ github.run_number }}-docker-cache-{hash}  # cache is valid only for current run on the current repository
#          restore-keys: |
#            ${{ github.run_id }}-${{ github.run_number }}-docker-cache-
#          skip-save: true
#      - name: Build docker images if needed
#        if: ${{ failure() && steps.dock.outcome == 'failure' }}
#        run: mvn -f assembly/pom.xml -Pdocker -DskipTests clean install
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@triggerServiceIntegration" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-accountAndTranslator:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@account or @translator" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-jobEngineStepDefinitions:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - run: echo "127.0.0.1       message-broker" | sudo tee -a /etc/hosts
#      - run: echo "127.0.0.1       job-engine" | sudo tee -a /etc/hosts
#      - name: Docker images caching
#        id: dock
#        uses: jpribyl/action-docker-layer-caching@v0.1.1  # docker images cache
#        continue-on-error: true
#        with:
#          key: ${{ github.run_id }}-${{ github.run_number }}-docker-cache-{hash}  # cache is valid only for current run on the current repository
#          restore-keys: |
#            ${{ github.run_id }}-${{ github.run_number }}-docker-cache-
#          skip-save: true
#      - name: Build docker images if needed
#        if: ${{ failure() && steps.dock.outcome == 'failure' }}
#        run: mvn -f assembly/pom.xml -Pdocker -DskipTests clean install
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@jobEngineStepDefinitions" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-jobEngineStartOfflineDevice:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - run: echo "127.0.0.1       message-broker" | sudo tee -a /etc/hosts
#      - run: echo "127.0.0.1       job-engine" | sudo tee -a /etc/hosts
#      - name: Docker images caching
#        id: dock
#        uses: jpribyl/action-docker-layer-caching@v0.1.1  # docker images cache
#        continue-on-error: true
#        with:
#          key: ${{ github.run_id }}-${{ github.run_number }}-docker-cache-{hash}  # cache is valid only for current run on the current repository
#          restore-keys: |
#            ${{ github.run_id }}-${{ github.run_number }}-docker-cache-
#          skip-save: true
#      - name: Build docker images if needed
#        if: ${{ failure() && steps.dock.outcome == 'failure' }}
#        run: mvn -f assembly/pom.xml -Pdocker -DskipTests clean install
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@jobEngineStartOfflineDevice" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-jobEngineStartOnlineDevice:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - run: echo "127.0.0.1       message-broker" | sudo tee -a /etc/hosts
#      - run: echo "127.0.0.1       job-engine" | sudo tee -a /etc/hosts
#      - name: Docker images caching
#        id: dock
#        uses: jpribyl/action-docker-layer-caching@v0.1.1  # docker images cache
#        continue-on-error: true
#        with:
#          key: ${{ github.run_id }}-${{ github.run_number }}-docker-cache-{hash}  # cache is valid only for current run on the current repository
#          restore-keys: |
#            ${{ github.run_id }}-${{ github.run_number }}-docker-cache-
#          skip-save: true
#      - name: Build docker images if needed
#        if: ${{ failure() && steps.dock.outcome == 'failure' }}
#        run: mvn -f assembly/pom.xml -Pdocker -DskipTests clean install
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@jobEngineStartOnlineDevice" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-jobEngineRestartOfflineDevice:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - run: echo "127.0.0.1       message-broker" | sudo tee -a /etc/hosts
#      - run: echo "127.0.0.1       job-engine" | sudo tee -a /etc/hosts
#      - name: Docker images caching
#        id: dock
#        uses: jpribyl/action-docker-layer-caching@v0.1.1  # docker images cache
#        continue-on-error: true
#        with:
#          key: ${{ github.run_id }}-${{ github.run_number }}-docker-cache-{hash}  # cache is valid only for current run on the current repository
#          restore-keys: |
#            ${{ github.run_id }}-${{ github.run_number }}-docker-cache-
#          skip-save: true
#      - name: Build docker images if needed
#        if: ${{ failure() && steps.dock.outcome == 'failure' }}
#        run: mvn -f assembly/pom.xml -Pdocker -DskipTests clean install
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@jobEngineRestartOfflineDevice" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-jobEngineRestartOnlineDevice:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - run: echo "127.0.0.1       message-broker" | sudo tee -a /etc/hosts
#      - run: echo "127.0.0.1       job-engine" | sudo tee -a /etc/hosts
#      - name: Docker images caching
#        id: dock
#        uses: jpribyl/action-docker-layer-caching@v0.1.1  # docker images cache
#        continue-on-error: true
#        with:
#          key: ${{ github.run_id }}-${{ github.run_number }}-docker-cache-{hash}  # cache is valid only for current run on the current repository
#          restore-keys: |
#            ${{ github.run_id }}-${{ github.run_number }}-docker-cache-
#          skip-save: true
#      - name: Build docker images if needed
#        if: ${{ failure() && steps.dock.outcome == 'failure' }}
#        run: mvn -f assembly/pom.xml -Pdocker -DskipTests clean install
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@jobEngineRestartOnlineDevice" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-jobEngineRestartOnlineDeviceSecondPart:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - run: echo "127.0.0.1       message-broker" | sudo tee -a /etc/hosts
#      - run: echo "127.0.0.1       job-engine" | sudo tee -a /etc/hosts
#      - name: Docker images caching
#        id: dock
#        uses: jpribyl/action-docker-layer-caching@v0.1.1  # docker images cache
#        continue-on-error: true
#        with:
#          key: ${{ github.run_id }}-${{ github.run_number }}-docker-cache-{hash}  # cache is valid only for current run on the current repository
#          restore-keys: |
#            ${{ github.run_id }}-${{ github.run_number }}-docker-cache-
#          skip-save: true
#      - name: Build docker images if needed
#        if: ${{ failure() && steps.dock.outcome == 'failure' }}
#        run: mvn -f assembly/pom.xml -Pdocker -DskipTests clean install
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@jobEngineRestartOnlineDeviceSecondPart" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-jobEngineServiceStop:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - run: echo "127.0.0.1       message-broker" | sudo tee -a /etc/hosts
#      - run: echo "127.0.0.1       job-engine" | sudo tee -a /etc/hosts
#      - name: Docker images caching
#        id: dock
#        uses: jpribyl/action-docker-layer-caching@v0.1.1  # docker images cache
#        continue-on-error: true
#        with:
#          key: ${{ github.run_id }}-${{ github.run_number }}-docker-cache-{hash}  # cache is valid only for current run on the current repository
#          restore-keys: |
#            ${{ github.run_id }}-${{ github.run_number }}-docker-cache-
#          skip-save: true
#      - name: Build docker images if needed
#        if: ${{ failure() && steps.dock.outcome == 'failure' }}
#        run: mvn -f assembly/pom.xml -Pdocker -DskipTests clean install
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@jobEngineServiceStop" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-RoleAndGroup:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@role or @group" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-deviceRegistry:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - run: echo "127.0.0.1       message-broker" | sudo tee -a /etc/hosts
#      - name: Docker images caching
#        id: dock
#        uses: jpribyl/action-docker-layer-caching@v0.1.1  # docker images cache
#        continue-on-error: true
#        with:
#          key: ${{ github.run_id }}-${{ github.run_number }}-docker-cache-{hash}  # cache is valid only for current run on the current repository
#          restore-keys: |
#            ${{ github.run_id }}-${{ github.run_number }}-docker-cache-
#          skip-save: true
#      - name: Build docker images if needed
#        if: ${{ failure() && steps.dock.outcome == 'failure' }}
#        run: mvn -f assembly/pom.xml -Pdocker -DskipTests clean install
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@deviceRegistry" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  test-endpoint:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - run: echo "127.0.0.1       message-broker" | sudo tee -a /etc/hosts
#      - name: Docker images caching
#        id: dock
#        uses: jpribyl/action-docker-layer-caching@v0.1.1  # docker images cache
#        continue-on-error: true
#        with:
#          key: ${{ github.run_id }}-${{ github.run_number }}-docker-cache-{hash}  # cache is valid only for current run on the current repository
#          restore-keys: |
#            ${{ github.run_id }}-${{ github.run_number }}-docker-cache-
#          skip-save: true
#      - name: Build docker images if needed
#        if: ${{ failure() && steps.dock.outcome == 'failure' }}
#        run: mvn -f assembly/pom.xml -Pdocker -DskipTests clean install
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="@endpoint" -pl ${TEST_PROJECTS} verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  junit-tests:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - uses: nick-fields/retry@v2.8.1
#        with:
#          timeout_minutes: 45
#          retry_on: error
#          max_attempts: 1
#          command: ./ci-output.sh mvn -B ${BUILD_OPTS} ${CONFIG_OVERRIDES} -Dgroups='org.eclipse.kapua.qa.markers.junit.JUnitTests' verify
#      - run: bash <(curl -s https://codecov.io/bash)
#  build-javadoc:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 11
#          cache: 'maven'
#      - uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#      - run: mvn -B -DskipTests install javadoc:jar
#      - run: bash <(curl -s https://codecov.io/bash)

